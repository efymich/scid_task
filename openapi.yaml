openapi: 3.0.3
info:
  title: List of journals and authors
  description: Listing API JSON
  version: 1.0.0
tags:
  - name: authors
    description: "методы для работы с сущностью Автор"
  - name: magazines
    description: "методы для работы с сущностью Журнал"

paths:
  /author/list:
    get:
      tags:
        - authors
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_name:
                    $ref: "#/components/schemas/last_name"
                  first_name:
                    $ref: "#/components/schemas/first_name"
                  middle_name:
                    $ref: "#/components/schemas/middle_name"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /author/list/{page}:
    parameters:
      - $ref: "#/components/parameters/page"
    get:
      tags:
        - authors
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_name:
                    $ref: "#/components/schemas/last_name"
                  first_name:
                    $ref: "#/components/schemas/first_name"
                  middle_name:
                    $ref: "#/components/schemas/middle_name"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /author/list/{page}/{perPage}:
    parameters:
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/perPage"
    get:
      tags:
        - authors
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  last_name:
                    $ref: "#/components/schemas/last_name"
                  first_name:
                    $ref: "#/components/schemas/first_name"
                  middle_name:
                    $ref: "#/components/schemas/middle_name"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /author/add:
    post:
      tags:
        - authors
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - last_name
                - first_name
              properties:
                last_name:
                  $ref: "#/components/schemas/last_name"
                first_name:
                  $ref: "#/components/schemas/first_name"
                middle_name:
                  $ref: "#/components/schemas/middle_name"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"

  /author/update:
    post:
      tags:
        - authors
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/id"
                last_name:
                  $ref: "#/components/schemas/last_name"
                first_name:
                  $ref: "#/components/schemas/first_name"
                middle_name:
                  $ref: "#/components/schemas/middle_name"
      responses:
        200:
          description: "Ссылка добавлена!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"

  /author/delete:
    post:
      tags:
        - authors
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: "#/components/schemas/id"
                last_name:
                  $ref: "#/components/schemas/last_name"
                first_name:
                  $ref: "#/components/schemas/first_name"
                middle_name:
                  $ref: "#/components/schemas/middle_name"
      responses:
        200:
          description: "Ссылка добавлена!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"

  /magazine/list:
    get:
      tags:
        - magazines
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/id"
                  name:
                    $ref: "#/components/schemas/name"
                  description:
                    $ref: "#/components/schemas/description"
                  image:
                    $ref: "#/components/schemas/image"
                  author_id:
                    $ref: "#/components/parameters/author_id"
                  created_at:
                    $ref: "#/components/schemas/created_at"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /magazine/list/{author_id}:
    parameters:
      - $ref: "#/components/parameters/author_id"
    get:
      tags:
        - magazines
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/id"
                  name:
                    $ref: "#/components/schemas/name"
                  description:
                    $ref: "#/components/schemas/description"
                  image:
                    $ref: "#/components/schemas/image"
                  author_id:
                    $ref: "#/components/parameters/author_id"
                  created_at:
                    $ref: "#/components/schemas/created_at"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /magazine/list/{author_id}/{page}:
    parameters:
      - $ref: "#/components/parameters/author_id"
      - $ref: "#/components/parameters/page"
    get:
      tags:
        - magazines
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/id"
                  name:
                    $ref: "#/components/schemas/name"
                  description:
                    $ref: "#/components/schemas/description"
                  image:
                    $ref: "#/components/schemas/image"
                  author_id:
                    $ref: "#/components/parameters/author_id"
                  created_at:
                    $ref: "#/components/schemas/created_at"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /magazine/list/{author_id}/{page}/{perPage}:
    parameters:
      - $ref: "#/components/parameters/author_id"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/perPage"
    get:
      tags:
        - magazines
      description: "Отображение списка авторов"
      responses:
        200:
          description: "Запрос выполнен!"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: "#/components/schemas/id"
                  name:
                    $ref: "#/components/schemas/name"
                  description:
                    $ref: "#/components/schemas/description"
                  image:
                    $ref: "#/components/schemas/image"
                  author_id:
                    $ref: "#/components/parameters/author_id"
                  created_at:
                    $ref: "#/components/schemas/created_at"
        400:
          $ref: "#/components/responses/Error"
        404:
          $ref: "#/components/responses/Error"
        500:
          $ref: "#/components/responses/Error"

  /magazine/add:
    post:
      tags:
        - magazines
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - author_id
              properties:
                name:
                  $ref: "#/components/schemas/name"
                description:
                  $ref: "#/components/schemas/description"
                image:
                  type: string
                  format: binary
                author_id:
                  $ref: "#/components/parameters/author_id"
                created_at:
                  $ref: "#/components/schemas/created_at"
            encoding:
              image:
                contentType: image/jpeg, image/png
      responses:
        200:
          description: "Ссылка добавлена!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"


  /magazine/update:
    post:
      tags:
        - magazines
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - id
              properties:
                name:
                  $ref: "#/components/schemas/name"
                description:
                  $ref: "#/components/schemas/description"
                image:
                  type: string
                  format: binary
                author_id:
                  $ref: "#/components/parameters/author_id"
                created_at:
                  $ref: "#/components/schemas/created_at"
            encoding:
              image:
                contentType: image/jpeg, image/png
      responses:
        200:
          description: "Ссылка добавлена!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"


  /magazine/delete:
    post:
      tags:
        - magazines
      description: "Добавление исходной ссылки в БД"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - id
              properties:
                name:
                  $ref: "#/components/schemas/name"
                description:
                  $ref: "#/components/schemas/description"
                image:
                  type: string
                  format: binary
                author_id:
                  $ref: "#/components/parameters/author_id"
                created_at:
                  $ref: "#/components/schemas/created_at"
            encoding:
              image:
                contentType: image/jpeg, image/png
      responses:
        200:
          description: "Ссылка добавлена!"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/AnyDict"
                  - $ref: "#/components/schemas/AnyValue"
        400:
          $ref: "#/components/responses/Error"


components:
  responses:
    Error:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                description: ""
                example: ""
              description:
                type: string
                description: ""

  parameters:
    author_id:
      name: author_id
      in: path
      description: "Id автора"
      required: false
      schema:
        type: integer
    page:
      name: page
      in: path
      description: "Номер показываемой страницы"
      required: false
      schema:
        type: integer
    perPage:
      name: perPage
      in: path
      description: "Количество показываемых записей на странице"
      required: false
      schema:
        type: integer

  schemas:
    AnyDict:
      type: object
      additionalProperties:
        type: string
      example:
        message: "query is OK"
    AnyValue:
      type: object
      description: "wrapper"
      properties:
        data:
          nullable: true
          anyOf:
            - type: array
            - type: string
            - type: object
    id:
      type: integer
      description: "ID записи"
      example: 1

    last_name:
      type: string
      description: "Фамилия автора"
      example: "Иванов"
      minLength: 3

    first_name:
      type: string
      description: "Имя автора"
      example: "Иван"

    middle_name:
      type: string
      description: "Отчество автора"
      example: "Иванович"


    name:
      type: string
      description: "Название журнала"
      example: "Economic"

    description:
      type: string
      description: "Краткое содержание"
      example: ""

    image:
      type: string
      description: "Ссылка на картинку"
      example: "image/"

    author_id:
      type: integer
      description: "ID автора"
      example: 1

    created_at:
      type: string
      description: "Дата выпуска журнала"
      format: "YYYY-MM-DD"
      example: "2020-01-01"